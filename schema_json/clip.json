{
  "ClipChannel": {
    "additionalProperties": false,
    "id": "ClipChannel",
    "properties": {
      "blendType": {
        "enum": [
          "Linear"
        ]
      },
      "jointIndex": {
        "type": "number"
      },
      "jointName": {
        "type": "string"
      },
      "name": {
        "type": "string"
      },
      "translationSamples": {
        "$ref": "BinaryPointer"
      },
      "times": {
        "$ref": "BinaryPointer"
      },
      "rotationSamples": {
        "$ref": "BinaryPointer"
      },
      "scaleSamples": {
        "$ref": "BinaryPointer"
      },
      "type": {
        "enum": [
          "Joint",
          "Trigger",
          "FloatLERP"
        ]
      },
      "properties": {
        "description": "Type trigger only, has to match length of times",
        "type": "object",
        "additionalProperties": {}
      }
    },
    "required": [
      "blendType",
      "jointIndex",
      "jointName",
      "name",
      "translationSamples",
      "times",
      "rotationSamples",
      "scaleSamples",
      "type"
    ]
  },
  "clip": {
    "additionalProperties": false,
    "id": "clip",
    "properties": {
      "binaryRef": {
        "$ref": "BinaryRef"
      },
      "name": {
        "type": "string"
      },
      "ref": {
        "type": "string"
      },
      "channels": {
        "type": "array",
        "items": {
          "$ref": "ClipChannel"
        }
      }
    },
    "required": [
      "binaryRef",
      "name",
      "channels"
    ]
  },
  "DateTime": {
    "additionalProperties": false,
    "id": "DateTime",
    "description": "Matches an ISO8601 datetime, e.g. 2014-01-11T13:29:12.42423",
    "type": "string",
    "format": "date-time",
    "properties": {}
  },
  "Color": {
    "additionalProperties": false,
    "id": "Color",
    "description": "Matches an array of 3-4 numeric elements between [0,1]",
    "type": "array",
    "items": {
      "type": "number",
      "maximum": 1,
      "minimum": 0
    },
    "minItems": 3,
    "maxItems": 4,
    "properties": {}
  },
  "Vector3": {
    "additionalProperties": false,
    "id": "Vector3",
    "description": "Matches an array of 3 values",
    "type": "array",
    "items": {
      "type": "number"
    },
    "minItems": 3,
    "maxItems": 3,
    "properties": {}
  },
  "Vector2": {
    "additionalProperties": false,
    "id": "Vector2",
    "description": "Array of 2 values",
    "type": "array",
    "items": {
      "type": "number"
    },
    "minItems": 2,
    "maxItems": 2,
    "properties": {}
  },
  "URI": {
    "additionalProperties": false,
    "id": "URI",
    "description": "Matches rfc3987 URI",
    "type": "string",
    "format": "uri",
    "properties": {}
  },
  "BinaryPointer": {
    "additionalProperties": false,
    "id": "BinaryPointer",
    "description": "Vector [byteOffset, wordLength, type]",
    "type": "array",
    "minItems": 3,
    "maxItems": 3,
    "properties": {}
  },
  "EntityRef": {
    "additionalProperties": false,
    "id": "EntityRef",
    "description": "Matches id ending with .entity",
    "type": "string",
    "pattern": "\\.entity$",
    "properties": {}
  },
  "GroupRef": {
    "additionalProperties": false,
    "id": "GroupRef",
    "description": "Matches id ending with .group",
    "type": "string",
    "pattern": "\\.group$",
    "properties": {}
  },
  "AudioRef": {
    "additionalProperties": false,
    "id": "AudioRef",
    "description": "Matches id ending with one of .mp3, .wav\n(case sensitive, must be lowercase)",
    "type": "string",
    "pattern": "\\.(mp3|wav)$",
    "properties": {}
  },
  "ImageRef": {
    "additionalProperties": false,
    "id": "ImageRef",
    "description": "Matches id ending with one of .jpg, .jpeg, .gif, .png, .tga, .dds, .crn\n(case sensitive, must be lowercase)",
    "type": "string",
    "pattern": "\\.(jpe?g|png|gif|tga|dds|crn)$",
    "properties": {}
  },
  "PosteffectRef": {
    "additionalProperties": false,
    "id": "PosteffectRef",
    "description": "Matches id ending with .posteffect",
    "type": "string",
    "pattern": "\\.posteffect$",
    "properties": {}
  },
  "LayersRef": {
    "additionalProperties": false,
    "id": "LayersRef",
    "description": "Matches id ending with .animation",
    "type": "string",
    "pattern": "\\.animation$",
    "properties": {}
  },
  "PoseRef": {
    "additionalProperties": false,
    "id": "PoseRef",
    "description": "Matches id ending with .skeleton",
    "type": "string",
    "pattern": "\\.skeleton$",
    "properties": {}
  },
  "MaterialRef": {
    "additionalProperties": false,
    "id": "MaterialRef",
    "description": "Matches id ending with .material",
    "type": "string",
    "pattern": "\\.material$",
    "properties": {}
  },
  "ScriptRef": {
    "additionalProperties": false,
    "id": "ScriptRef",
    "description": "Matches id ending with .script",
    "type": "string",
    "pattern": "\\.script$",
    "properties": {}
  },
  "MeshRef": {
    "additionalProperties": false,
    "id": "MeshRef",
    "description": "Matches id ending with .mesh",
    "type": "string",
    "pattern": "\\.mesh$",
    "properties": {}
  },
  "MachineRef": {
    "additionalProperties": false,
    "id": "MachineRef",
    "description": "Matches id ending with .machine",
    "type": "string",
    "pattern": "\\.machine$",
    "properties": {}
  },
  "SoundRef": {
    "additionalProperties": false,
    "id": "SoundRef",
    "description": "Matches id ending with .sound",
    "type": "string",
    "pattern": "\\.sound$",
    "properties": {}
  },
  "TextureRef": {
    "additionalProperties": false,
    "id": "TextureRef",
    "description": "Matches id ending with .sound",
    "type": "string",
    "pattern": "\\.texture$",
    "properties": {}
  },
  "AnimationStateRef": {
    "additionalProperties": false,
    "id": "AnimationStateRef",
    "description": "Matches id ending with .animstate",
    "type": "string",
    "pattern": "\\.animstate$",
    "properties": {}
  },
  "ClipRef": {
    "additionalProperties": false,
    "id": "ClipRef",
    "description": "Matches id ending with .clip",
    "type": "string",
    "pattern": "\\.clip$",
    "properties": {}
  },
  "BinaryRef": {
    "additionalProperties": false,
    "id": "BinaryRef",
    "description": "Matches id ending with .bin",
    "type": "string",
    "pattern": "\\.bin$",
    "properties": {}
  }
}